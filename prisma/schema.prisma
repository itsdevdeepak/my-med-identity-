// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

enum AuthenticatorTranspoter {
  usb
  ble
  nfc
  internal
}

enum CredentialDeviceType {
  singleDevice
  multiDevice
}

model Authenticator {
  id                   String                    @id @default(uuid())
  credentialID         String                    @unique
  credentialPublicKey  String
  counter              Int
  credentialDeviceType CredentialDeviceType
  credentialBackedUp   Boolean
  transports           AuthenticatorTranspoter[]

  userID String?
  user   User?   @relation(fields: [userID], references: [id])

  medicalStaffID String?
  medicalStaff   MedicalStaff? @relation(fields: [medicalStaffID], references: [id])

  healthInsurancCompanyID String?
  healthInsurancCompany   HealthInsuranceCompany? @relation(fields: [healthInsurancCompanyID], references: [id])

  @@map("devices")
}

enum Role {
  PATIENT
  MEDICAL_STAFF
  HEALTH_INSURANCE_COMPANY
  ADMIN
}

enum BloodType {
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  B_NEGATIVE
  O_POSITIVE
  O_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
}

model User {
  id           String     @id @default(uuid())
  createdAt    DateTime   @default(now())
  email        String     @unique
  name         String
  mobileNumber Int?       @unique
  ssn          String     @unique
  role         Role       @default(PATIENT)
  dateOfBirth  DateTime?
  gender       String?
  bloodType    BloodType?

  currentChallenge String?
  devices          Authenticator[]
  @@index(fields: [ssn],   map: "userSSN")
  @@index(fields: [email], map: "userEmail")
}

model MedicalStaff {
  id           String     @id @default(uuid())
  createdAt    DateTime   @default(now())
  email        String     @unique
  name         String
  mobileNumber Int?       @unique
  ssn          String     @unique
  role         Role       @default(MEDICAL_STAFF)
  dateOfBirth  DateTime?
  gender       String?
  bloodType    BloodType?

  currentChallenge String?
  devices          Authenticator[]
}

model HealthInsuranceCompany {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  email        String   @unique
  name         String
  mobileNumber Int      @unique
  role         Role     @default(HEALTH_INSURANCE_COMPANY)

  currentChallenge String?
  devices          Authenticator[]
}
